# This is a basic workflow to help you get started with Actions

name: macos-x64-cpu

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  DEVELOPER_DIR: /Applications/Xcode_12.2.app/Contents/Developer
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  macos-clang:
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: update
        run: brew update
      
      - name: build-essential
        run: brew install cmake eigen
        
      - name: protobuf
        run: brew install protobuf opencv3
      # Runs a set of commands using the runners shell
      - name: MKL
        run: |
          export MKL_INSTALL_DIR=/opt/intel
          export ARCH_FNAME=m_mkl_2017.4.220.dmg
          travis_wait 30 download http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12185/${ARCH_FNAME}
          hdiutil attach $DL_DIR/${ARCH_FNAME}
          cat /Volumes/m_mkl_2017.4.220/m_mkl_2017.4.220.app/Contents/MacOS/silent.cfg | grep -v EULA | grep -v PSET_INSTALL_DIR > silent.cfg
          echo "ACCEPT_EULA=accept" >> silent.cfg
          echo "PSET_INSTALL_DIR=${MKL_INSTALL_DIR}" >> silent.cfg
          sudo /Volumes/m_mkl_2017.4.220/m_mkl_2017.4.220.app/Contents/MacOS/install.sh -s ./silent.cfg . /opt/intel/mkl/bin/mklvars.sh intel64 ilp64
          
      - name: build
        env: 
          CC: clang
          CXX: clang++
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . j 4
